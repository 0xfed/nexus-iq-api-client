openapi: 3.0.1
info:
  title: Sonatype Nexus IQ Server
  description: |
    This documents the available APIs into
    [Sonatype Nexus IQ Server](https://www.sonatype.com/products/open-source-security-dependency-management)
    (also knwon as Nexus Lifecycle).
  contact:
    name: Sonatype Community Maintainers
    url: https://github.com/sonatype-nexus-community
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "156"
tags:
  - name: Application Categories
  - name: Applications
  - name: Claim
  - name: Components
  - name: Composite Source Control
  - name: Composite Source Control Config Validator
  - name: Config
  - name: Config Artifactory Connection
  - name: Config Crowd
  - name: Config JIRA
  - name: Config Mail
  - name: Config Proxy Server
  - name: Config Reverse Proxy Authentication
  - name: Config SAML
  - name: Config Source Control
  - name: Cyclone Dx
  - name: Data Retention Policies
  - name: Endpoints
  - name: Evaluation
  - name: Firewall
  - name: Labels
  - name: License Legal Metadata
  - name: Organizations
  - name: Policies
  - name: Policy Violations
  - name: Policy Waiver
  - name: Policy Waivers
  - name: Product
  - name: Reports
  - name: Repositories
  - name: Role Memberships
  - name: Roles
  - name: Scan
  - name: Search
  - name: Security Overrides
  - name: Source Control
  - name: Source Control Metrics
  - name: Telemetry
  - name: User Tokens
  - name: Users
  - name: Vulnerabilities
paths:
  /api/v2/config/features/{feature}:
    post:
      tags:
        - Config
      operationId: enabledFeature
      parameters:
        - name: feature
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config
      operationId: disableFeature
      parameters:
        - name: feature
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/cycloneDx/{applicationId}/reports/{reportId}:
    get:
      tags:
        - Cyclone Dx
      operationId: getByReportId
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
  /api/v2/cycloneDx/{cdxVersion}/{applicationId}/reports/{reportId}:
    get:
      tags:
        - Cyclone Dx
      operationId: getByReportId_1
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          required: true
          schema:
            type: string
        - name: cdxVersion
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /api/v2/cycloneDx/{applicationId}/stages/{stageId}:
    get:
      tags:
        - Cyclone Dx
      operationId: getLatest
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
  /api/v2/cycloneDx/{cdxVersion}/{applicationId}/stages/{stageId}:
    get:
      tags:
        - Cyclone Dx
      operationId: getLatest_1
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
        - name: cdxVersion
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
            application/json: {}
  /api/v2/firewall/releaseQuarantine/configuration:
    get:
      tags:
        - Firewall
      operationId: getFirewallAutoUnquarantineConfig
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO'
    put:
      tags:
        - Firewall
      operationId: setFirewallAutoUnquarantineConfig
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiFirewallReleaseQuarantineConfigDTO'
  /api/v2/firewall/releaseQuarantine/summary:
    get:
      tags:
        - Firewall
      operationId: getFirewallUnquarantineSummary
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFirewallReleaseQuarantineSummaryDTO'
  /api/v2/firewall/components/quarantined:
    get:
      tags:
        - Firewall
      operationId: getQuarantineList
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: policyId
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: asc
          in: query
          schema:
            type: boolean
            default: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /api/v2/firewall/quarantine/summary:
    get:
      tags:
        - Firewall
      operationId: getQuarantineSummary
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiFirewallQuarantineSummaryDTO'
  /api/v2/firewall/quarantinedComponentView/configuration/anonymousAccess:
    get:
      tags:
        - Firewall
      operationId: getQuarantinedComponentViewAnonymousAccess
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /api/v2/firewall/components/autoReleasedFromQuarantine:
    get:
      tags:
        - Firewall
      operationId: getUnquarantineList
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: policyId
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
        - name: asc
          in: query
          schema:
            type: boolean
            default: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /api/v2/firewall/quarantinedComponentView/configuration/anonymousAccess/{enabled}:
    put:
      tags:
        - Firewall
      operationId: setQuarantinedComponentViewAnonymousAccess
      parameters:
        - name: enabled
          in: path
          required: true
          schema:
            type: boolean
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /api/v2/reports/metrics:
    post:
      tags:
        - Reports
      operationId: getMetrics
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMetricsReportingQueryDTOV2'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /api/v2/repositories/{repositoryManagerInstanceId}/{repositoryPublicId}/components/quarantined/pathnames:
    post:
      tags:
        - Repositories
      operationId: getQuarantinedByPath
      parameters:
        - name: repositoryManagerInstanceId
          in: path
          required: true
          schema:
            type: string
        - name: repositoryPublicId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRepositoryPathResponseDTO'
  /api/v2/scan/applications/{applicationId}/status/{scanRequestId}:
    get:
      tags:
        - Scan
      operationId: getScanStatus
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: scanRequestId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiThirdPartyScanResultDTO'
  /api/v2/scan/applications/{applicationId}/sources/{source}:
    post:
      tags:
        - Scan
      operationId: scanComponents
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: source
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: query
          schema:
            type: string
            default: build
      requestBody:
        content:
          application/xml:
            schema:
              type: string
          application/json:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /api/v2/search/advanced/index:
    post:
      tags:
        - Search
      operationId: createSearchIndexAsync
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/search/advanced/export/csv:
    get:
      tags:
        - Search
      operationId: getExportResults
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: allComponents
          in: query
          schema:
            type: boolean
            default: false
      responses:
        default:
          description: default response
          content:
            application/csv: {}
  /api/v2/search/advanced:
    get:
      tags:
        - Search
      operationId: searchIndex
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: allComponents
          in: query
          schema:
            type: boolean
            default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultDTO'
  /api/v2/applicationCategories/organization/{organizationId}:
    get:
      tags:
        - Application Categories
      operationId: getTags
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApplicationCategoryDTO'
    put:
      tags:
        - Application Categories
      operationId: updateTag
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationCategoryDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationCategoryDTO'
    post:
      tags:
        - Application Categories
      operationId: addTag
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationCategoryDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationCategoryDTO'
  /api/v2/applicationCategories/organization/{organizationId}/{tagId}:
    delete:
      tags:
        - Application Categories
      operationId: deleteTag
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: tagId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/applicationCategories/organization/{organizationId}/applicable:
    get:
      tags:
        - Application Categories
      operationId: getApplicableTags
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableTagsDTO'
  /api/v2/applicationCategories/application/{applicationPublicId}/applicable:
    get:
      tags:
        - Application Categories
      operationId: getApplicableTagsByApplicationPublicId
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApplicationCategoryDTO'
  /api/v2/applicationCategories/application/{applicationPublicId}:
    get:
      tags:
        - Application Categories
      operationId: getApplicationApplicableTags
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableTagsDTO'
  /api/v2/applicationCategories/organization/{organizationId}/policy:
    get:
      tags:
        - Application Categories
      operationId: getAppliedPolicyTags
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PolicyTag'
  /api/v2/applicationCategories/organization/{organizationId}/applied:
    get:
      tags:
        - Application Categories
      operationId: getAppliedTags
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppliedTagsDTO'
  /api/v2/applicationCategories/application:
    get:
      tags:
        - Application Categories
      operationId: getTagsUsedByApplications
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApplicationCategoryDTO'
  /api/v2/applications:
    get:
      tags:
        - Applications
      operationId: getApplications
      parameters:
        - name: publicId
          in: query
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
        - name: includeCategories
          in: query
          schema:
            type: boolean
            default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                properties:
                  applications:
                    type: array
                    items:
                      $ref: '#/components/schemas/ApiApplicationDTO'
    post:
      tags:
        - Applications
      operationId: addApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
  /api/v2/applications/{sourceApplicationId}/clone:
    post:
      tags:
        - Applications
      operationId: cloneApplication
      parameters:
        - name: sourceApplicationId
          in: path
          required: true
          schema:
            type: string
        - name: clonedApplicationName
          in: query
          schema:
            type: string
        - name: clonedApplicationPublicId
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
  /api/v2/applications/{applicationId}:
    get:
      tags:
        - Applications
      operationId: getApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
    put:
      tags:
        - Applications
      operationId: updateApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiApplicationDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationDTO'
    delete:
      tags:
        - Applications
      operationId: deleteApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/applications/organization/{organizationId}:
    get:
      tags:
        - Applications
      operationId: getApplicationsByOrganizationId
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationListDTO'
  /api/v2/applications/{applicationId}/move/organization/{organizationId}:
    post:
      tags:
        - Applications
      operationId: moveApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMoveApplicationResponseDTOV2'
  /api/v2/components/details:
    post:
      tags:
        - Components
      operationId: getComponentDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentDetailsRequestDTOV2'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentDetailsResultDTOV2'
  /api/v2/components/{componentHash}/labels/{labelName}/{ownerType}s/{internalOwnerId}:
    post:
      tags:
        - Components
      operationId: setComponentLabel
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: componentHash
          in: path
          required: true
          schema:
            type: string
        - name: labelName
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Components
      operationId: deleteComponentLabel
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: componentHash
          in: path
          required: true
          schema:
            type: string
        - name: labelName
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/repositories/quarantine/{quarantineId}/release:
    post:
      tags:
        - Repositories
      operationId: releaseQuarantineWithoutReEval
      parameters:
        - name: quarantineId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentReleasedFromQuarantineDTO'
  /api/v2/components/remediation/{ownerType}/{ownerId}:
    post:
      tags:
        - Components
      operationId: getSuggestedRemediationForComponent
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: query
          schema:
            type: string
        - name: identificationSource
          in: query
          schema:
            type: string
        - name: scanId
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentDTOV2'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentRemediationDTO'
  /api/v2/components/versions:
    post:
      tags:
        - Components
      operationId: getComponentVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentOrPurlIdentifierDTOV2'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v2/reports/components/quarantined:
    get:
      tags:
        - Reports
      operationId: getComponentsInQuarantine
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentsInQuarantineDTO'
  /api/v2/reports/components/waivers:
    get:
      tags:
        - Reports
      operationId: getComponentsWithWaivers
      parameters:
        - name: format
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentWaiversDTO'
  /api/v2/compositeSourceControlConfigValidator/application/{applicationId}:
    get:
      tags:
        - Composite Source Control Config Validator
      operationId: validateSourceControlConfig
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationValidationResult'
  /api/v2/compositeSourceControl/{ownerType}/{internalOwnerId}:
    get:
      tags:
        - Composite Source Control
      operationId: getCompositeSourceControlByOwner
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCompositeSourceControlDTO'
  /api/v2/config:
    get:
      tags:
        - Config
      operationId: getConfiguration
      parameters:
        - name: property
          in: query
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
    put:
      tags:
        - Config
      operationId: setConfiguration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config
      operationId: deleteConfiguration
      parameters:
        - name: property
          in: query
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/config/crowd:
    get:
      tags:
        - Config Crowd
      operationId: getCrowdConfiguration
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCrowdConfigurationDTO'
    put:
      tags:
        - Config Crowd
      operationId: insertOrUpdateCrowdConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCrowdConfigurationDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config Crowd
      operationId: deleteCrowdConfiguration
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/config/crowd/test:
    post:
      tags:
        - Config Crowd
      operationId: testCrowdConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCrowdConfigurationDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusDTO'
  /api/v2/dataRetentionPolicies/organizations/{organizationId}:
    get:
      tags:
        - Data Retention Policies
      operationId: getDataRetentionPolicies
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDataRetentionPoliciesDTO'
    put:
      tags:
        - Data Retention Policies
      operationId: setDataRetentionPolicies
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiDataRetentionPoliciesDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/endpoints/{apiType}:
    get:
      tags:
        - Endpoints
      operationId: getOpenAPI
      parameters:
        - name: apiType
          in: path
          required: true
          schema:
            type: string
            enum:
              - public
              - experimental
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /api/v2/evaluation/applications/{applicationId}/manifestEvaluation:
    post:
      tags:
        - Evaluation
      operationId: deprecatedManifestEvaluation
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlEvaluationRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationStatusDTOV2'
      deprecated: true
  /api/v2/evaluation/applications/{applicationId}:
    post:
      tags:
        - Evaluation
      operationId: evaluateComponents
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiComponentEvaluationRequestDTOV2'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentEvaluationTicketDTOV2'
  /api/v2/evaluation/applications/{applicationId}/sourceControlEvaluation:
    post:
      tags:
        - Evaluation
      operationId: evaluateSourceControl
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlEvaluationRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationStatusDTOV2'
  /api/v2/evaluation/applications/{applicationId}/status/{statusId}:
    get:
      tags:
        - Evaluation
      operationId: getApplicationEvaluationStatus
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: statusId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationResultDTOV2'
  /api/v2/evaluation/applications/{applicationId}/results/{resultId}:
    get:
      tags:
        - Evaluation
      operationId: getComponentEvaluation
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: resultId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentEvaluationResultDTOV2'
  /api/v2/evaluation/applications/{applicationId}/promoteScan:
    post:
      tags:
        - Evaluation
      operationId: promoteScan
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiPromoteScanRequestDTOV2'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationEvaluationStatusDTOV2'
  /api/v2/claim/components/{hash}:
    get:
      tags:
        - Claim
      operationId: get
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
    delete:
      tags:
        - Claim
      operationId: delete
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/claim/components:
    get:
      tags:
        - Claim
      operationId: getAll
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHashComponentIdentifiersDTO'
    post:
      tags:
        - Claim
      operationId: set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
  /api/v2/config/jira:
    get:
      tags:
        - Config JIRA
      operationId: getConfiguration_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiJiraConfigurationDTO'
    put:
      tags:
        - Config JIRA
      operationId: setConfiguration_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config JIRA
      operationId: deleteConfiguration_1
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/labels/{ownerType}/{ownerId}:
    get:
      tags:
        - Labels
      operationId: getLabels
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: inherit
          in: query
          schema:
            type: boolean
            default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiLabelDTO'
    put:
      tags:
        - Labels
      operationId: updateLabel
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLabelDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLabelDTO'
    post:
      tags:
        - Labels
      operationId: addLabel
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiLabelDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLabelDTO'
  /api/v2/labels/{ownerType}/{ownerId}/{labelId}:
    delete:
      tags:
        - Labels
      operationId: deleteLabel
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: labelId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/labels/{ownerType}/{ownerId}/applicable/context/{labelId}:
    get:
      tags:
        - Labels
      operationId: getApplicableContexts
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: labelId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableContext'
  /api/v2/labels/{ownerType}/{ownerId}/applicable:
    get:
      tags:
        - Labels
      operationId: getApplicableLabels
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableLabels'
  /api/v2/licenseLegalMetadata/report-template/{id}:
    get:
      tags:
        - License Legal Metadata
      operationId: getAttributionReportTemplateById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributionReportTemplateDTO'
    delete:
      tags:
        - License Legal Metadata
      operationId: deleteAttributionReportTemplate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/licenseLegalMetadata/report-template:
    get:
      tags:
        - License Legal Metadata
      operationId: getAllAttributionReportTemplates
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributionReportTemplateDTO'
    post:
      tags:
        - License Legal Metadata
      operationId: saveAttributionReportTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributionReportTemplateDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributionReportTemplateDTO'
  /api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}/report:
    get:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalApplicationHTMLReport
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
    post:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalCustomApplicationHTMLReport
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/FormDataMultiPart'
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /api/v2/licenseLegalMetadata/application/{applicationId}:
    get:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalApplicationReport
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicenseLegalApplicationReportDTO'
  /api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}:
    get:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalApplicationReport_1
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicenseLegalApplicationReportDTO'
  /api/v2/licenseLegalMetadata/{ownerType}/{ownerId}/component:
    get:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalComponentReport
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
        - name: identificationSource
          in: query
          schema:
            type: string
        - name: scanId
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLicenseLegalComponentReportDTO'
  /api/v2/licenseLegalMetadata/application/{applicationId}/stage/{stageId}/report/templateId/{templateId}:
    post:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalCustomApplicationHTMLReport_1
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  # /api/v2/licenseLegalMetadata/customMultiApplication/report:
  #   post:
  #     tags:
  #       - License Legal Metadata
  #     operationId: getLicenseLegalCustomMultiApplicationHTMLReport
  #     requestBody:
  #       content:
  #         multipart/form-data:
  #           schema:
  #             $ref: '#/components/schemas/FormDataMultiPart'
  #     responses:
  #       default:
  #         description: default response
  #         content:
  #           text/html:
  #             schema:
  #               type: string
  /api/v2/licenseLegalMetadata/multiApplication/report/templateId/{templateId}:
    post:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalCustomMultiApplicationHTMLReport_1
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /api/v2/licenseLegalMetadata/multiApplication/report:
    post:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalMultiApplicationHTMLReport
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /api/v2/licenseLegalMetadata/multiApplication/activeUserFilter/report/templateId/{templateId}:
    post:
      tags:
        - License Legal Metadata
      operationId: getLicenseLegalMultiApplicationReportFromActiveUserFilter
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            text/html:
              schema:
                type: string
  /api/v2/config/mail:
    get:
      tags:
        - Config Mail
      operationId: getConfiguration_2
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiMailConfigurationDTO'
    put:
      tags:
        - Config Mail
      operationId: setConfiguration_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMailConfigurationDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config Mail
      operationId: deleteConfiguration_2
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/config/mail/test/{recipientEmail}:
    post:
      tags:
        - Config Mail
      operationId: testConfiguration
      parameters:
        - name: recipientEmail
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiMailConfigurationDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/organizations:
    get:
      tags:
        - Organizations
      operationId: getOrganizations
      parameters:
        - name: organizationName
          in: query
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOrganizationListDTO'
    post:
      tags:
        - Organizations
      operationId: addOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiOrganizationDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOrganizationDTO'
  /api/v2/organizations/{organizationId}:
    get:
      tags:
        - Organizations
      operationId: getOrganization
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOrganizationDTO'
  /api/v2/policies:
    get:
      tags:
        - Policies
      operationId: getPolicies
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyListDTO'
  /api/v2/policyViolations/{violationId}/applicableWaivers:
    get:
      tags:
        - Policy Violations
      operationId: getApplicableWaivers
      parameters:
        - name: violationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyWaiversApplicableToViolationDTO'
  /api/v2/policyViolations/crossStage:
    get:
      tags:
        - Policy Violations
      operationId: getCrossStagePolicyViolationByConstituentId
      parameters:
        - name: constituentId
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCrossStageViolationDTOV2'
  /api/v2/policyViolations/crossStage/{violationId}:
    get:
      tags:
        - Policy Violations
      operationId: getCrossStagePolicyViolationById
      parameters:
        - name: violationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCrossStageViolationDTOV2'
  /api/v2/policyViolations:
    get:
      tags:
        - Policy Violations
      operationId: getPolicyViolations
      parameters:
        - name: p
          in: query
          schema:
            uniqueItems: true
            type: array
            items:
              type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiApplicationViolationListDTOV2'
  /api/v2/policyViolations/transitive/{ownerType}/{ownerId}/{scanId}:
    get:
      tags:
        - Policy Violations
      operationId: getTransitivePolicyViolationsByAppScanComponent
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentTransitivePolicyViolationsDTO'
  /api/v2/policyViolations/transitive/{ownerType}/{ownerId}/stages/{stageId}:
    get:
      tags:
        - Policy Violations
      operationId: getTransitivePolicyViolationsByOwnerStageComponent
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentTransitivePolicyViolationsDTO'
  /api/v2/policyWaiver/{policyViolationId}/{ownerType}:
    post:
      tags:
        - Policy Waiver
      operationId: addPolicyWaiver
      parameters:
        - name: policyViolationId
          in: path
          required: true
          schema:
            type: string
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
      deprecated: true
  /api/v2/policyWaivers/{ownerType}/{ownerId}/{policyViolationId}:
    post:
      tags:
        - Policy Waivers
      operationId: addPolicyWaiverByPolicyViolationId
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: policyViolationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWaiverOptionsDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/policyWaivers/transitive/{ownerType}/{ownerId}/{scanId}:
    get:
      tags:
        - Policy Waivers
      operationId: getTransitivePolicyWaiversByAppScanComponent
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiComponentPolicyWaiversDTO'
    post:
      tags:
        - Policy Waivers
      operationId: addWaiverToTransitivePolicyViolationsByAppScanComponent
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWaiverOptionsDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/policyWaivers/transitive/{ownerType}/{ownerId}/stages/{stageId}:
    post:
      tags:
        - Policy Waivers
      operationId: addWaiverToTransitivePolicyViolationsByOwnerStageComponent
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: stageId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiWaiverOptionsDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/policyWaivers/{ownerType}/{ownerId}/{policyWaiverId}:
    get:
      tags:
        - Policy Waivers
      operationId: getPolicyWaiver
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: policyWaiverId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyWaiverDTO'
    delete:
      tags:
        - Policy Waivers
      operationId: deletePolicyWaiver
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: policyWaiverId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/policyWaivers/{ownerType}/{ownerId}:
    get:
      tags:
        - Policy Waivers
      operationId: getPolicyWaivers
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiPolicyWaiverDTO'
  # /api/v2/product/license:
  #   post:
  #     tags:
  #       - Product
  #     operationId: installLicense
  #     requestBody:
  #       content:
  #         multipart/form-data:
  #           schema:
  #             type: object
  #             properties:
  #               file:
  #                 $ref: '#/components/schemas/FormDataContentDisposition'
  #     responses:
  #       default:
  #         description: default response
  #         content:
  #           text/plain: {}
  #   delete:
  #     tags:
  #       - Product
  #     operationId: uninstallLicense
  #     responses:
  #       default:
  #         description: default response
  #         content:
  #           '*/*': {}
  /api/v2/config/httpProxyServer:
    get:
      tags:
        - Config Proxy Server
      operationId: getConfiguration_3
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiProxyServerConfigurationDTO'
    put:
      tags:
        - Config Proxy Server
      operationId: setConfiguration_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiProxyServerConfigurationDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config Proxy Server
      operationId: deleteConfiguration_3
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/applications/{applicationPublicId}/reports/{scanId}:
    get:
      tags:
        - Applications
      operationId: getData
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/applications/{applicationPublicId}/reports/{scanId}/dependencyTree:
    get:
      tags:
        - Applications
      operationId: getDependencyTree
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDependencyTreeResponseDTO'
  /api/v2/applications/{applicationPublicId}/reports/policyViolations/diff:
    get:
      tags:
        - Applications
      operationId: getPolicyViolationDiff
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
        - name: fromCommit
          in: query
          schema:
            type: string
        - name: toCommit
          in: query
          schema:
            type: string
        - name: fromPolicyEvaluationId
          in: query
          schema:
            type: string
        - name: toPolicyEvaluationId
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPolicyViolationDiffDTO'
  /api/v2/applications/{applicationPublicId}/reports/{scanId}/policy:
    get:
      tags:
        - Applications
      operationId: getPolicyViolations_1
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReportPolicyDataDTOV2'
  /api/v2/applications/{applicationPublicId}/reports/{scanId}/raw:
    get:
      tags:
        - Applications
      operationId: getRawData
      parameters:
        - name: applicationPublicId
          in: path
          required: true
          schema:
            type: string
        - name: scanId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReportRawDataDTOV2'
  /api/v2/reports/applications:
    get:
      tags:
        - Reports
      operationId: getAll_1
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApplicationReportDTOV2'
  /api/v2/reports/applications/{applicationId}:
    get:
      tags:
        - Reports
      operationId: getByApplicationId
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiApplicationReportDTOV2'
  /api/v2/reports/applications/{applicationId}/history:
    get:
      tags:
        - Reports
      operationId: getReportHistoryForApplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReportHistoryDTO'
  /api/v2/config/reverseProxyAuthentication:
    get:
      tags:
        - Config Reverse Proxy Authentication
      operationId: getConfiguration_4
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiReverseProxyAuthenticationConfigurationDTO'
    put:
      tags:
        - Config Reverse Proxy Authentication
      operationId: setConfiguration_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiReverseProxyAuthenticationConfigurationDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config Reverse Proxy Authentication
      operationId: deleteConfiguration_4
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/roleMemberships/{ownerType}/{internalOwnerId}:
    get:
      tags:
        - Role Memberships
      operationId: getRoleMembershipsApplicationOrOrganization
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleMemberMappingListDTO'
  /api/v2/roleMemberships/{ownerType}:
    get:
      tags:
        - Role Memberships
      operationId: getRoleMembershipsGlobalOrRepositoryContainer
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleMemberMappingListDTO'
  /api/v2/roleMemberships/{ownerType}/{internalOwnerId}/role/{roleId}/{memberType}/{memberName}:
    put:
      tags:
        - Role Memberships
      operationId: grantRoleMembershipApplicationOrOrganization
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: memberType
          in: path
          required: true
          schema:
            type: string
            enum:
              - USER
              - GROUP
        - name: memberName
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Role Memberships
      operationId: revokeRoleMembershipApplicationOrOrganization
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: memberType
          in: path
          required: true
          schema:
            type: string
            enum:
              - USER
              - GROUP
        - name: memberName
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/roleMemberships/{ownerType}/role/{roleId}/{memberType}/{memberName}:
    put:
      tags:
        - Role Memberships
      operationId: grantRoleMembershipGlobalOrRepositoryContainer
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: memberType
          in: path
          required: true
          schema:
            type: string
            enum:
              - USER
              - GROUP
        - name: memberName
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Role Memberships
      operationId: revokeRoleMembershipGlobalOrRepositoryContainer
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: roleId
          in: path
          required: true
          schema:
            type: string
        - name: memberType
          in: path
          required: true
          schema:
            type: string
            enum:
              - USER
              - GROUP
        - name: memberName
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/roles:
    get:
      tags:
        - Roles
      operationId: getRoles
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRoleListDTO'
  /api/v2/config/saml:
    get:
      tags:
        - Config SAML
      operationId: getSamlConfiguration
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSamlConfigurationResponseDTO'
    # put:
    #   tags:
    #     - Config SAML
    #   operationId: insertOrUpdateSamlConfiguration
    #   requestBody:
    #     content:
    #       multipart/form-data:
    #         schema:
    #           type: object
    #           properties:
    #             identityProviderXml:
    #               type: string
    #             samlConfiguration:
    #               $ref: '#/components/schemas/ApiSamlConfigurationDTO'
    #   responses:
    #     default:
    #       description: default response
    #       content:
    #         '*/*': {}
    delete:
      tags:
        - Config SAML
      operationId: deleteSamlConfiguration
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/config/saml/metadata:
    get:
      tags:
        - Config SAML
      operationId: getMetadata
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                type: string
  /api/v2/search/component:
    get:
      tags:
        - Search
      operationId: searchComponent
      parameters:
        - name: stageId
          in: query
          schema:
            type: string
        - name: hash
          in: query
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: packageUrl
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSearchResultsDTOV2'
  /api/v2/securityOverrides:
    get:
      tags:
        - Security Overrides
      operationId: getSecurityVulnerabilityOverrides
      parameters:
        - name: refId
          in: query
          schema:
            type: string
        - name: componentPurl
          in: query
          schema:
            type: string
        - name: ownerId
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSecurityVulnerabilityOverrideResponseDTOV2'
  /api/v2/config/sourceControl:
    get:
      tags:
        - Config Source Control
      operationId: getConfiguration_5
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlConfigurationDTO'
    put:
      tags:
        - Config Source Control
      operationId: setConfiguration_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonNode'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
    delete:
      tags:
        - Config Source Control
      operationId: deleteConfiguration_5
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/sourceControlMetrics/{ownerType}/{internalOwnerId}:
    get:
      tags:
        - Source Control Metrics
      operationId: getSourceControl
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiPullRequestResults'
  /api/v2/sourceControl:
    post:
      tags:
        - Source Control
      operationId: addOrUpdateSourceControl
      parameters:
        - name: publicId
          in: query
          schema:
            type: string
        - name: repositoryUrl
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
  /api/v2/sourceControl/{ownerType}/{internalOwnerId}:
    get:
      tags:
        - Source Control
      operationId: getSourceControl_1
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
    put:
      tags:
        - Source Control
      operationId: updateSourceControl
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
    post:
      tags:
        - Source Control
      operationId: addSourceControl
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiSourceControlDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSourceControlDTO'
    delete:
      tags:
        - Source Control
      operationId: deleteSourceControl
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/reports/waivers/stale:
    get:
      tags:
        - Reports
      operationId: getStaleWaivers
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStaleWaiversResponseDTO'
  /api/v2/users:
    get:
      tags:
        - Users
      operationId: getAll_2
      parameters:
        - name: realm
          in: query
          schema:
            type: string
            default: Internal
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserListDTO'
    post:
      tags:
        - Users
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUserDTO'
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/users/{username}:
    get:
      tags:
        - Users
      operationId: get_1
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: realm
          in: query
          schema:
            type: string
            default: Internal
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserDTO'
    put:
      tags:
        - Users
      operationId: update
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUserDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserDTO'
    delete:
      tags:
        - Users
      operationId: delete_1
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: realm
          in: query
          schema:
            type: string
            default: Internal
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/userTokens/currentUser:
    post:
      tags:
        - User Tokens
      operationId: createUserToken
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserTokenDTO'
    delete:
      tags:
        - User Tokens
      operationId: deleteCurrentUserToken
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/userTokens/userCode/{userCode}:
    delete:
      tags:
        - User Tokens
      operationId: deleteUserTokenByUserCode
      parameters:
        - name: userCode
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/userTokens/{username}:
    get:
      tags:
        - User Tokens
      operationId: getUserTokenByUsernameAndRealmId
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
        - name: realm
          in: query
          schema:
            type: string
            default: Internal
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserTokenDTO'
  /api/v2/userTokens/currentUser/hasToken:
    get:
      tags:
        - User Tokens
      operationId: getUserTokenExistsForCurrentUser
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUserTokenExistsDTO'
  /api/v2/userTokens:
    get:
      tags:
        - User Tokens
      operationId: getUserTokensByCreatedBetweenAndRealmId
      parameters:
        - name: createdAfter
          in: query
          schema:
            type: string
        - name: createdBefore
          in: query
          schema:
            type: string
        - name: realm
          in: query
          schema:
            type: string
            default: Internal
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiUserTokenDTO'
  /api/v2/userTokens/purge:
    delete:
      tags:
        - User Tokens
      operationId: purgeUserTokens
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/vulnerabilities/{refId}:
    get:
      tags:
        - Vulnerabilities
      operationId: getSecurityVulnerabilityDetails
      parameters:
        - name: refId
          in: path
          required: true
          schema:
            type: string
        - name: componentIdentifier
          in: query
          schema:
            $ref: '#/components/schemas/ComponentIdentifier'
        - name: identificationSource
          in: query
          schema:
            type: string
        - name: scanId
          in: query
          schema:
            type: string
        - name: ownerType
          in: query
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: ownerId
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityVulnerabilityData'
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}:
    get:
      tags:
        - Config Artifactory Connection
      operationId: getOwnerArtifactoryConnection
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: inherit
          in: query
          schema:
            type: boolean
            default: false
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOwnerArtifactoryConnectionDTO'
    put:
      tags:
        - Config Artifactory Connection
      operationId: updateOwnerArtifactoryConnectionStatus
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionStatusRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json: {}
    post:
      tags:
        - Config Artifactory Connection
      operationId: addArtifactoryConnection
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/{artifactoryConnectionId}:
    get:
      tags:
        - Config Artifactory Connection
      operationId: getArtifactoryConnection
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: artifactoryConnectionId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
    put:
      tags:
        - Config Artifactory Connection
      operationId: updateArtifactoryConnection
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: artifactoryConnectionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
    delete:
      tags:
        - Config Artifactory Connection
      operationId: deleteArtifactoryConnection
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: artifactoryConnectionId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/test:
    post:
      tags:
        - Config Artifactory Connection
      operationId: testArtifactoryConnection
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusDTO'
  /api/v2/config/artifactoryConnection/{ownerType}/{internalOwnerId}/{artifactoryConnectionId}/test:
    post:
      tags:
        - Config Artifactory Connection
      operationId: testArtifactoryConnection_1
      parameters:
        - name: ownerType
          in: path
          required: true
          schema:
            type: string
            enum:
              - application
              - organization
              - repository_container
              - repository
              - global
        - name: internalOwnerId
          in: path
          required: true
          schema:
            type: string
        - name: artifactoryConnectionId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiStatusDTO'
  /api/v2/telemetry:
    post:
      tags:
        - Telemetry
      operationId: postExternalTelemetry
      parameters:
        - name: user-agent
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
      responses:
        default:
          description: default response
          content:
            '*/*': {}
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    ApiFirewallReleaseQuarantineConfigDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        autoReleaseQuarantineEnabled:
          type: boolean
    ApiFirewallReleaseQuarantineSummaryDTO:
      type: object
      properties:
        autoReleaseQuarantineCountMTD:
          type: integer
          format: int64
        autoReleaseQuarantineCountYTD:
          type: integer
          format: int64
    ApiFirewallQuarantineSummaryDTO:
      type: object
      properties:
        repositoryCount:
          type: integer
          format: int64
        quarantineEnabledRepositoryCount:
          type: integer
          format: int64
        quarantineEnabled:
          type: boolean
        totalComponentCount:
          type: integer
          format: int64
        quarantinedComponentCount:
          type: integer
          format: int64
    ApiMetricsReportingQueryDTOV2:
      type: object
      properties:
        timePeriod:
          type: string
          enum:
            - WEEK
            - MONTH
        firstTimePeriod:
          type: string
        lastTimePeriod:
          type: string
        applicationIds:
          uniqueItems: true
          type: array
          items:
            type: string
        organizationIds:
          uniqueItems: true
          type: array
          items:
            type: string
    ApiRepositoryComponentPath:
      type: object
      properties:
        pathname:
          type: string
        quarantine:
          type: boolean
    ApiRepositoryPathResponseDTO:
      type: object
      properties:
        pathVersions:
          type: array
          items:
            $ref: '#/components/schemas/ApiRepositoryPathVersions'
    ApiRepositoryPathVersions:
      type: object
      properties:
        requestIndex:
          type: integer
          format: int32
        repositoryComponentPaths:
          type: array
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentPath'
    ApiEvaluationResultCounterDTO:
      type: object
      properties:
        critical:
          type: integer
          format: int32
        severe:
          type: integer
          format: int32
        moderate:
          type: integer
          format: int32
    ApiThirdPartyScanResultDTO:
      type: object
      properties:
        policyAction:
          type: string
        reportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        reportDataUrl:
          type: string
        embeddableReportHtmlUrl:
          type: string
        isError:
          type: boolean
        errorMessage:
          type: string
        componentsAffected:
          $ref: '#/components/schemas/ApiEvaluationResultCounterDTO'
        openPolicyViolations:
          $ref: '#/components/schemas/ApiEvaluationResultCounterDTO'
        grandfatheredPolicyViolations:
          type: integer
          format: int32
    ApiComponentIdentifierDTOV2:
      type: object
      properties:
        format:
          type: string
        coordinates:
          type: object
          additionalProperties:
            type: string
    GroupingByDTO:
      type: object
      properties:
        groupIdentifier:
          type: string
          enum:
            - itemType
            - organizationId
            - organizationName
            - applicationId
            - applicationName
            - applicationPublicId
            - policyEvaluationStage
            - reportId
            - componentHash
            - componentFormat
            - componentName
            - componentCoordinate
            - vulnerabilityId
            - vulnerabilitySeverity
            - vulnerabilityStatus
            - vulnerabilityDescription
            - applicationCategoryId
            - applicationCategoryName
            - applicationCategoryColor
            - applicationCategoryDescription
            - componentLabelId
            - componentLabelName
            - componentLabelColor
            - componentLabelDescription
            - policyId
            - policyName
            - policyThreatCategory
            - policyThreatLevel
        groupBy:
          type: string
        additionalInfo:
          type: string
        searchResultItemDTOS:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultItemDTO'
    SearchResultDTO:
      type: object
      properties:
        searchQuery:
          type: string
        page:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        totalNumberOfHits:
          type: integer
          format: int32
        isExactTotalNumberOfHits:
          type: boolean
        groupingByDTOS:
          type: array
          items:
            $ref: '#/components/schemas/GroupingByDTO'
    SearchResultItemDTO:
      type: object
      properties:
        itemType:
          type: string
        organizationId:
          type: string
        organizationName:
          type: string
        applicationId:
          type: string
        applicationPublicId:
          type: string
        applicationName:
          type: string
        policyEvaluationStage:
          type: string
        reportId:
          type: string
        componentHash:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        componentName:
          type: string
        vulnerabilityId:
          type: string
        vulnerabilityDescription:
          type: string
        vulnerabilityStatus:
          type: string
        applicationCategoryId:
          type: string
        applicationCategoryName:
          type: string
        applicationCategoryColor:
          type: string
        applicationCategoryDescription:
          type: string
        componentLabelId:
          type: string
        componentLabelName:
          type: string
        componentLabelColor:
          type: string
        componentLabelDescription:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        policyThreatCategory:
          type: string
        policyThreatLevel:
          type: integer
          format: int32
        resultIndex:
          type: integer
          format: int32
    ApiApplicationCategoryDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        organizationId:
          type: string
        color:
          type: string
    ApplicableTagsDTO:
      type: object
      properties:
        applicationCategoriesByOwner:
          type: array
          items:
            $ref: '#/components/schemas/TagsByOwnerDTO'
    TagsByOwnerDTO:
      type: object
      properties:
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          type: string
          enum:
            - application
            - organization
            - repository_container
            - repository
            - global
        applicationCategories:
          type: array
          items:
            $ref: '#/components/schemas/ApiApplicationCategoryDTO'
    PolicyTag:
      type: object
      properties:
        id:
          type: string
        policyId:
          type: string
        tagId:
          type: string
    ApplicationTag:
      type: object
      properties:
        id:
          type: string
        applicationId:
          type: string
        tagId:
          type: string
    ApplicationTagsByOwnerDTO:
      type: object
      properties:
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          type: string
          enum:
            - application
            - organization
            - repository_container
            - repository
            - global
        applicationTags:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTag'
    AppliedTagsDTO:
      type: object
      properties:
        applicationTagsByOwner:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationTagsByOwnerDTO'
    ApiApplicationDTO:
      type: object
      properties:
        id:
          type: string
        publicId:
          type: string
        name:
          type: string
        organizationId:
          type: string
        contactUserName:
          type: string
        applicationTags:
          type: array
          items:
            $ref: '#/components/schemas/ApiApplicationTagDTO'
    ApiApplicationTagDTO:
      type: object
      properties:
        id:
          type: string
        tagId:
          type: string
        applicationId:
          type: string
    ApiApplicationListDTO:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApiApplicationDTO'
    ApiMoveApplicationResponseDTOV2:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        errors:
          type: array
          items:
            type: string
    ApiComponentDTOV2:
      type: object
      properties:
        packageUrl:
          type: string
        hash:
          type: string
        sha256:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        proprietary:
          type: boolean
        thirdParty:
          type: boolean
    ApiComponentDetailsDTOV2:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
        matchState:
          type: string
        catalogDate:
          type: string
          format: date-time
        relativePopularity:
          type: integer
          format: int32
          nullable: true
        licenseData:
          $ref: '#/components/schemas/ApiLicenseDataDTO'
        integrityRating:
          type: string
          nullable: true
        hygieneRating:
          type: string
          nullable: true
        securityData:
          $ref: '#/components/schemas/ApiSecurityDataDTO'
        policyData:
          $ref: '#/components/schemas/ApiComponentPolicyViolationListDTOV2'
        projectData:
          $ref: '#/components/schemas/ApiComponentProjectDataDTO'
    ApiComponentDetailsResultDTOV2:
      type: object
      properties:
        componentDetails:
          type: array
          items:
            $ref: '#/components/schemas/ApiComponentDetailsDTOV2'
    ApiComponentPolicyViolationListDTOV2:
      type: object
      properties:
        policyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationDTOV2'
    ApiComponentProjectDataDTO:
      type: object
      properties:
        firstReleaseDate:
          type: string
          format: date-time
        lastReleaseDate:
          type: string
          format: date-time
        projectMetadata:
          $ref: '#/components/schemas/ApiComponentProjectMetadataDTO'
        sourceControlManagement:
          $ref: '#/components/schemas/ApiComponentProjectScmDTO'
    ApiComponentProjectMetadataDTO:
      type: object
      properties:
        description:
          type: string
        organization:
          type: string
    ApiComponentProjectScmDTO:
      type: object
      properties:
        scmUrl:
          type: string
        scmMetadata:
          $ref: '#/components/schemas/ApiComponentProjectScmMetadataDTO'
        scmDetails:
          $ref: '#/components/schemas/ApiComponentProjectScmDetailsDTO'
    ApiComponentProjectScmDetailsDTO:
      type: object
      properties:
        commitsPerMonth:
          type: integer
          format: int32
        uniqueDevsPerMonth:
          type: integer
          format: int32
    ApiComponentProjectScmMetadataDTO:
      type: object
      properties:
        stars:
          type: integer
          format: int32
        forks:
          type: integer
          format: int32
    ApiConstraintViolationDTO:
      type: object
      properties:
        constraintId:
          type: string
        constraintName:
          type: string
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintViolationReasonDTO'
    ApiConstraintViolationReasonDTO:
      type: object
      properties:
        reason:
          type: string
        reference:
          $ref: '#/components/schemas/TriggerReference'
    ApiLicenseDTO:
      type: object
      properties:
        licenseId:
          type: string
        licenseName:
          type: string
    ApiLicenseDataDTO:
      type: object
      properties:
        declaredLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        observedLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        effectiveLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        overriddenLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        status:
          type: string
    ApiPolicyViolationDTOV2:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          type: integer
          format: int32
        constraintViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
    ApiSecurityDataDTO:
      type: object
      properties:
        securityIssues:
          type: array
          items:
            $ref: '#/components/schemas/ApiSecurityIssueDTO'
    ApiSecurityIssueDTO:
      type: object
      properties:
        source:
          type: string
        reference:
          type: string
        severity:
          type: number
          format: float
        status:
          type: string
        url:
          type: string
        threatCategory:
          type: string
        cwe:
          type: string
        cvssVector:
          type: string
        cvssVectorSource:
          type: string
    TriggerReference:
      type: object
      properties:
        value:
          type: string
        type:
          type: string
          enum:
            - SECURITY_VULNERABILITY_REFID
    ApiComponentDetailsRequestDTOV2:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/ApiComponentDTOV2'
    ApiComponentReleasedFromQuarantineDTO:
      type: object
      properties:
        componentReleasedFromQuarantine:
          $ref: '#/components/schemas/ApiRepositoryComponentPolicyViolationDTO'
    ApiPolicyWaiverDTO:
      type: object
      properties:
        policyWaiverId:
          type: string
        policyViolationId:
          type: string
        comment:
          type: string
        createTime:
          type: string
          format: date-time
        expiryTime:
          type: string
          format: date-time
        isObsolete:
          type: boolean
        scopeOwnerType:
          type: string
        scopeOwnerId:
          type: string
        scopeOwnerName:
          type: string
        hash:
          type: string
        policyId:
          type: string
        vulnerabilityId:
          type: string
        policyName:
          type: string
        constraintFacts:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintFact'
        constraintFactsJson:
          type: string
        componentName:
          type: string
        creatorId:
          type: string
        creatorName:
          type: string
        matcherStrategy:
          type: string
          enum:
            - DEFAULT
            - EXACT_COMPONENT
            - ALL_COMPONENTS
            - ALL_VERSIONS
        associatedPackageUrl:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        threatLevel:
          type: integer
          format: int32
        displayName:
          $ref: '#/components/schemas/ComponentDisplayName'
    ApiRepositoryComponentDTO:
      type: object
      properties:
        packageUrl:
          type: string
        hash:
          type: string
        sha256:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        thirdParty:
          type: boolean
        quarantineId:
          type: string
        quarantineTime:
          type: string
          format: date-time
        quarantineReleaseTime:
          type: string
          format: date-time
    ApiRepositoryComponentPolicyViolationDTO:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/ApiRepositoryComponentDTO'
        waivedPolicyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiWaivedPolicyViolationDTO'
        policyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationDTOV2'
    ApiWaivedPolicyViolationDTO:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          type: integer
          format: int32
        constraintViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
        policyWaiver:
          $ref: '#/components/schemas/ApiPolicyWaiverDTO'
    ComponentDisplayName:
      type: object
      properties:
        parts:
          type: array
          items:
            $ref: '#/components/schemas/ComponentDisplayNamePart'
        name:
          type: string
    ComponentDisplayNamePart:
      type: object
      properties:
        field:
          type: string
        value:
          type: string
    ConditionFact:
      type: object
      properties:
        conditionTypeId:
          type: string
        conditionIndex:
          type: integer
          format: int32
        summary:
          type: string
        reason:
          type: string
        reference:
          $ref: '#/components/schemas/TriggerReference'
        triggerJson:
          type: string
    ConstraintFact:
      type: object
      properties:
        constraintId:
          type: string
        constraintName:
          type: string
        operatorName:
          type: string
        conditionFacts:
          type: array
          items:
            $ref: '#/components/schemas/ConditionFact'
    ApiComponentChangeActionDTO:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
    ApiComponentRemediationDTO:
      type: object
      properties:
        remediation:
          $ref: '#/components/schemas/ApiComponentRemediationValueDTO'
    ApiComponentRemediationValueDTO:
      type: object
      properties:
        versionChanges:
          type: array
          items:
            $ref: '#/components/schemas/ApiVersionChangeOptionDTO'
    ApiVersionChangeOptionDTO:
      type: object
      properties:
        type:
          type: string
          enum:
            - next-no-violations
            - next-non-failing
            - next-no-violations-with-dependencies
            - next-non-failing-with-dependencies
        data:
          $ref: '#/components/schemas/ApiComponentChangeActionDTO'
    ApiComponentOrPurlIdentifierDTOV2:
      type: object
      properties:
        format:
          type: string
        coordinates:
          type: object
          additionalProperties:
            type: string
        packageUrl:
          type: string
    ApiComponentsInQuarantineDTO:
      type: object
      properties:
        componentsInQuarantine:
          type: array
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentsInQuarantineDTO'
    ApiRepositoryComponentsInQuarantineDTO:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/ApiRepositoryDTO'
        components:
          type: array
          items:
            $ref: '#/components/schemas/ApiRepositoryComponentPolicyViolationDTO'
    ApiRepositoryDTO:
      type: object
      properties:
        repositoryId:
          type: string
        publicId:
          type: string
        format:
          type: string
    ApiApplicationBaseDTO:
      type: object
      properties:
        id:
          type: string
        publicId:
          type: string
        name:
          type: string
        organizationId:
          type: string
        contactUserName:
          type: string
    ApiApplicationWaiverDTO:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationStageDTO'
    ApiComponentPolicyViolationDTO:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
        waivedPolicyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiWaivedPolicyViolationDTO'
    ApiComponentWaiversDTO:
      type: object
      properties:
        applicationWaivers:
          type: array
          items:
            $ref: '#/components/schemas/ApiApplicationWaiverDTO'
        repositoryWaivers:
          type: array
          items:
            $ref: '#/components/schemas/ApiRepositoryWaiverDTO'
    ApiPolicyViolationStageDTO:
      type: object
      properties:
        stageId:
          type: string
        componentPolicyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiComponentPolicyViolationDTO'
    ApiRepositoryWaiverDTO:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/ApiRepositoryDTO'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationStageDTO'
    ConfigurationValidationResult:
      type: object
      properties:
        configurationComplete:
          $ref: '#/components/schemas/ValidationResult'
        repoPrivate:
          $ref: '#/components/schemas/ValidationResult'
        tokenPermissions:
          $ref: '#/components/schemas/ValidationResult'
        sshConfiguration:
          $ref: '#/components/schemas/ValidationResult'
    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
        message:
          type: string
    ApiCompositeSourceControlDTO:
      type: object
      properties:
        id:
          type: string
        ownerId:
          type: string
        repositoryUrl:
          type: string
        provider:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        username:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        token:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        baseBranch:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        remediationPullRequestsEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        statusChecksEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        pullRequestCommentingEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        sourceControlEvaluationsEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
        sourceControlScanTarget:
          $ref: '#/components/schemas/ApiCompositeValueDTOString'
        sshEnabled:
          $ref: '#/components/schemas/ApiCompositeValueDTOBoolean'
    ApiCompositeValueDTOBoolean:
      type: object
      properties:
        value:
          type: boolean
        parentValue:
          type: boolean
        parentName:
          type: string
    ApiCompositeValueDTOString:
      type: object
      properties:
        value:
          type: string
        parentValue:
          type: string
        parentName:
          type: string
    ApiCrowdConfigurationDTO:
      type: object
      properties:
        serverUrl:
          type: string
        applicationName:
          type: string
        applicationPassword:
          type: array
          items:
            type: string
    ApiStatusDTO:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    ApiDataRetentionPoliciesDTO:
      type: object
      properties:
        applicationReports:
          $ref: '#/components/schemas/ApiReportRetentionPoliciesDTO'
        successMetrics:
          $ref: '#/components/schemas/ApiSuccessMetricsRetentionPolicyDTO'
    ApiReportRetentionPoliciesDTO:
      type: object
      properties:
        stages:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ApiReportRetentionPolicyDTO'
    ApiReportRetentionPolicyDTO:
      type: object
      properties:
        inheritPolicy:
          type: boolean
        enablePurging:
          type: boolean
        maxCount:
          type: integer
          format: int32
        maxAge:
          type: string
    ApiSuccessMetricsRetentionPolicyDTO:
      type: object
      properties:
        inheritPolicy:
          type: boolean
        enablePurging:
          type: boolean
        maxAge:
          type: string
    ApiApplicationEvaluationStatusDTOV2:
      type: object
      properties:
        statusUrl:
          type: string
    ApiSourceControlEvaluationRequestDTO:
      type: object
      properties:
        stageId:
          type: string
        branchName:
          type: string
        scanTargets:
          type: array
          items:
            type: string
    ApiComponentEvaluationTicketDTOV2:
      type: object
      properties:
        resultId:
          type: string
        submittedDate:
          type: string
          format: date-time
        applicationId:
          type: string
        resultsUrl:
          type: string
    ApiComponentEvaluationRequestDTOV2:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/ApiComponentDTOV2'
    ApiApplicationEvaluationResultDTOV2:
      type: object
      properties:
        status:
          type: string
        reason:
          type: string
        reportHtmlUrl:
          type: string
        embeddableReportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        reportDataUrl:
          type: string
    ApiComponentEvaluationResultDTOV2:
      type: object
      properties:
        submittedDate:
          type: string
          format: date-time
        evaluationDate:
          type: string
          format: date-time
        applicationId:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApiComponentDetailsDTOV2'
        isError:
          type: boolean
        errorMessage:
          type: string
    ApiPromoteScanRequestDTOV2:
      type: object
      properties:
        scanId:
          type: string
        sourceStageId:
          type: string
        targetStageId:
          type: string
    ApiHashComponentIdentifierDTO:
      type: object
      properties:
        hash:
          type: string
        comment:
          type: string
        createTime:
          type: string
          format: date-time
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
    ApiHashComponentIdentifiersDTO:
      type: object
      properties:
        componentClaims:
          type: array
          items:
            $ref: '#/components/schemas/ApiHashComponentIdentifierDTO'
    ApiJiraConfigurationDTO:
      type: object
      properties:
        url:
          type: string
        username:
          type: string
        password:
          type: array
          items:
            type: string
        customFields:
          type: object
          additionalProperties:
            type: object
    JsonNode:
      type: object
    ApiLabelDTO:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        description:
          type: string
        color:
          type: string
        ownerId:
          type: string
        ownerType:
          type: string
    ApplicableContext:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - application
            - organization
            - repository_container
            - repository
            - global
        children:
          type: array
          items:
            $ref: '#/components/schemas/ApplicableContext'
    ApplicableLabels:
      type: object
      properties:
        labelsByOwner:
          type: array
          items:
            $ref: '#/components/schemas/LabelsByOwner'
    LabelsByOwner:
      type: object
      properties:
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          type: string
          enum:
            - application
            - organization
            - repository_container
            - repository
            - global
        labels:
          type: array
          items:
            $ref: '#/components/schemas/ApiLabelDTO'
    AttributionReportTemplateDTO:
      type: object
      properties:
        id:
          type: string
        templateName:
          type: string
        documentTitle:
          type: string
        header:
          type: string
        footer:
          type: string
        includeTableOfContents:
          type: boolean
        includeAppendix:
          type: boolean
        includeStandardLicenseTexts:
          type: boolean
        includeSonatypeSpecialLicenses:
          type: boolean
        lastUpdatedAt:
          type: string
          format: date-time
        includeInnerSource:
          type: boolean
    ApiLicenseLegalApplicationReportDTO:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalComponentDTO'
        licenseLegalMetadata:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalMetadataDTO'
    ApiLicenseLegalComponentDTO:
      type: object
      properties:
        packageUrl:
          type: string
        hash:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        licenseLegalData:
          $ref: '#/components/schemas/ApiLicenseLegalDataDTO'
        stageScans:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalStageScanDTO'
    ApiLicenseLegalCopyrightDTO:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        originalContentHash:
          type: string
        status:
          type: string
          enum:
            - enabled
            - disabled
    ApiLicenseLegalDataDTO:
      type: object
      properties:
        declaredLicenses:
          type: array
          items:
            type: string
        observedLicenses:
          type: array
          items:
            type: string
        effectiveLicenses:
          type: array
          items:
            type: string
        highestEffectiveLicenseThreatGroup:
          $ref: '#/components/schemas/ApiLicenseThreatDTOV2'
        copyrights:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalCopyrightDTO'
        licenseFiles:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalFileDTO'
        noticeFiles:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalFileDTO'
        obligations:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalObligationDTO'
        attributions:
          type: array
          items:
            $ref: '#/components/schemas/ComponentObligationAttributionDTO'
        sourceLinks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LegalSourceLinkDTO'
        effectiveLicenseStatus:
          type: string
        componentCopyrightId:
          type: string
        componentCopyrightScopeOwnerId:
          type: string
        componentCopyrightLastUpdatedByUsername:
          type: string
        componentCopyrightLastUpdatedAt:
          type: string
          format: date-time
        componentLicensesId:
          type: string
        componentLicensesScopeOwnerId:
          type: string
        componentLicensesLastUpdatedByUsername:
          type: string
        componentLicensesLastUpdatedAt:
          type: string
          format: date-time
        componentNoticesId:
          type: string
        componentNoticesScopeOwnerId:
          type: string
        componentNoticesLastUpdatedByUsername:
          type: string
        componentNoticesLastUpdatedAt:
          type: string
          format: date-time
    ApiLicenseLegalFileDTO:
      type: object
      properties:
        id:
          type: string
        relPath:
          type: string
        content:
          type: string
        originalContentHash:
          type: string
        status:
          type: string
          enum:
            - enabled
            - disabled
    ApiLicenseLegalMetadataDTO:
      type: object
      properties:
        licenseId:
          type: string
        licenseName:
          type: string
        licenseText:
          type: string
        obligations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/LicenseObligationDTO'
        threatGroup:
          $ref: '#/components/schemas/LicenseThreatGroupDTO'
        isMulti:
          type: boolean
        singleLicenseIds:
          uniqueItems: true
          type: array
          items:
            type: string
    ApiLicenseLegalObligationDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - OPEN
            - IGNORED
            - FLAGGED
            - FULFILLED
        comment:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
        ownerId:
          type: string
        lastUpdatedAt:
          type: string
          format: date-time
        lastUpdatedByUsername:
          type: string
    ApiLicenseLegalStageScanDTO:
      type: object
      properties:
        stageName:
          type: string
        scanId:
          type: string
        scanDate:
          type: string
          format: date-time
    ApiLicenseThreatDTOV2:
      type: object
      properties:
        licenseThreatGroupName:
          type: string
        licenseThreatGroupLevel:
          type: integer
          format: int32
        licenseThreatGroupCategory:
          type: string
    ComponentObligationAttributionDTO:
      type: object
      properties:
        id:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
        ownerId:
          type: string
        obligationName:
          type: string
        content:
          type: string
        lastUpdatedAt:
          type: string
          format: date-time
        lastUpdatedByUsername:
          type: string
    LegalSourceLinkDTO:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        originalContent:
          type: string
        status:
          type: string
          enum:
            - enabled
            - disabled
    LicenseObligationDTO:
      type: object
      properties:
        name:
          type: string
        obligationTexts:
          uniqueItems: true
          type: array
          items:
            type: string
    LicenseThreatGroupDTO:
      type: object
      properties:
        name:
          type: string
        threatLevel:
          type: integer
          format: int32
    ApiLicenseLegalComponentReportDTO:
      type: object
      properties:
        component:
          $ref: '#/components/schemas/ApiLicenseLegalComponentDTO'
        licenseLegalMetadata:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseLegalMetadataDTO'
    ComponentIdentifier:
      type: object
      properties:
        format:
          type: string
        coordinates:
          type: object
          additionalProperties:
            type: string
    BodyPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
    FormDataBodyPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        simple:
          type: boolean
        formDataContentDisposition:
          $ref: '#/components/schemas/FormDataContentDisposition'
        name:
          type: string
        value:
          type: string
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    FormDataContentDisposition:
      type: object
      properties:
        type:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        readDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int64
        name:
          type: string
    FormDataMultiPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        bodyParts:
          type: array
          items:
            $ref: '#/components/schemas/BodyPart'
        fields:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/FormDataBodyPart'
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    MessageBodyWorkers:
      type: object
    MultiPart:
      type: object
      properties:
        contentDisposition:
          $ref: '#/components/schemas/ContentDisposition'
        entity:
          type: object
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          type: object
          properties:
            type:
              type: string
            subtype:
              type: string
            parameters:
              type: object
              additionalProperties:
                type: string
            wildcardType:
              type: boolean
            wildcardSubtype:
              type: boolean
        messageBodyWorkers:
          $ref: '#/components/schemas/MessageBodyWorkers'
        parent:
          $ref: '#/components/schemas/MultiPart'
        providers:
          type: object
        bodyParts:
          type: array
          items:
            $ref: '#/components/schemas/BodyPart'
        parameterizedHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/ParameterizedHeader'
    ParameterizedHeader:
      type: object
      properties:
        value:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
    ApiMailConfigurationDTO:
      type: object
      properties:
        hostname:
          type: string
        port:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: array
          items:
            type: string
        passwordIsIncluded:
          type: boolean
        sslEnabled:
          type: boolean
        startTlsEnabled:
          type: boolean
        systemEmail:
          type: string
    ApiOrganizationDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        parentOrganizationId:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ApiTagDTO'
    ApiTagDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        color:
          type: string
          enum:
            - white
            - grey
            - black
            - green
            - yellow
            - orange
            - red
            - blue
            - light-red
            - light-green
            - light-blue
            - light-purple
            - dark-red
            - dark-green
            - dark-blue
            - dark-purple
    ApiOrganizationListDTO:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/ApiOrganizationDTO'
    ApiPolicyDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        ownerId:
          type: string
        ownerType:
          type: string
          enum:
            - APPLICATION
            - ORGANIZATION
        threatLevel:
          type: integer
          format: int32
        policyType:
          type: string
    ApiPolicyListDTO:
      type: object
      properties:
        policies:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyDTO'
    ApiPolicyWaiversApplicableToViolationDTO:
      type: object
      properties:
        activeWaivers:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyWaiverDTO'
        expiredWaivers:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyWaiverDTO'
    ApiCrossStageViolationDTOV2:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          type: integer
          format: int32
        constraintViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
        applicationPublicId:
          type: string
        applicationName:
          type: string
        organizationName:
          type: string
        openTime:
          type: string
          format: date-time
        fixTime:
          type: string
          format: date-time
        hash:
          type: string
        policyThreatCategory:
          type: string
        displayName:
          $ref: '#/components/schemas/ComponentDisplayName'
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        filename:
          type: string
        stageData:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StageData'
        policyOwner:
          $ref: '#/components/schemas/PolicyOwner'
    PolicyOwner:
      type: object
      properties:
        ownerPublicId:
          type: string
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          type: string
    StageData:
      type: object
      properties:
        mostRecentEvaluationTime:
          type: string
          format: date-time
        mostRecentScanId:
          type: string
        actionTypeId:
          type: string
    ApiApplicationViolationDTOV2:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        policyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiEnhancedPolicyViolationDTOV2'
    ApiApplicationViolationListDTOV2:
      type: object
      properties:
        applicationViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiApplicationViolationDTOV2'
    ApiEnhancedPolicyViolationDTOV2:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          type: integer
          format: int32
        constraintViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
        stageId:
          type: string
        reportId:
          type: string
        reportUrl:
          type: string
        openTime:
          type: string
          format: date-time
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
    ApiComponentTransitivePolicyViolationsDTO:
      type: object
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
        hash:
          type: string
        displayName:
          type: string
        isInnerSource:
          type: boolean
        transitivePolicyViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiStagePolicyViolationComponentDTO'
    ApiStagePolicyViolationComponentDTO:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        threatLevel:
          type: integer
          format: int32
        threatCategory:
          type: string
        policyViolationId:
          type: string
        action:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
        hash:
          type: string
        displayName:
          type: string
    ApiWaiverOptionsDTO:
      type: object
      properties:
        comment:
          type: string
        applyToAllComponents:
          type: boolean
        matcherStrategy:
          type: string
          enum:
            - DEFAULT
            - EXACT_COMPONENT
            - ALL_COMPONENTS
            - ALL_VERSIONS
        expiryTime:
          type: string
          format: date-time
    ApiComponentPolicyWaiversDTO:
      type: object
      properties:
        componentPolicyWaivers:
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyWaiverDTO'
    ApiProxyServerConfigurationDTO:
      type: object
      properties:
        hostname:
          type: string
        port:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: array
          items:
            type: string
        passwordIsIncluded:
          type: boolean
        excludeHosts:
          type: array
          items:
            type: string
    ApiDependencyTreeNodeDTO:
      type: object
      properties:
        packageUrl:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        children:
          type: array
          items:
            $ref: '#/components/schemas/ApiDependencyTreeNodeDTO'
        direct:
          type: boolean
    ApiDependencyTreeResponseDTO:
      type: object
      properties:
        dependencyTree:
          $ref: '#/components/schemas/ApiDependencyTreeNodeDTO'
    ApiApplicationEvaluationCommitDTO:
      type: object
      properties:
        commitHash:
          type: string
        scanId:
          type: string
        reportUrl:
          type: string
        scanTime:
          type: string
          format: date-time
    ApiPolicyViolationDiffDTO:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationDTO'
        fromCommit:
          $ref: '#/components/schemas/ApiApplicationEvaluationCommitDTO'
        toCommit:
          $ref: '#/components/schemas/ApiApplicationEvaluationCommitDTO'
        diffTime:
          type: string
          format: date-time
        addedViolations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationForDiffDTO'
        sameViolations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationForDiffDTO'
        removedViolations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApiPolicyViolationForDiffDTO'
    ApiPolicyViolationForDiffDTO:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        policyViolationId:
          type: string
        threatLevel:
          type: integer
          format: int32
        constraintViolations:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintViolationDTO'
        component:
          $ref: '#/components/schemas/ApiComponentDTOV2'
    ApiDependencyDataDTO:
      type: object
      properties:
        directDependency:
          type: boolean
        innerSource:
          type: boolean
        parentComponentPurls:
          uniqueItems: true
          type: array
          items:
            type: string
        innerSourceData:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/InnerSourceData'
    ApiReportComponentPolicyViolationsDTOV2:
      type: object
      properties:
        packageUrl:
          type: string
        hash:
          type: string
        sha256:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        proprietary:
          type: boolean
        thirdParty:
          type: boolean
        matchState:
          type: string
        pathnames:
          type: array
          items:
            type: string
        dependencyData:
          $ref: '#/components/schemas/ApiDependencyDataDTO'
        violations:
          type: array
          items:
            $ref: '#/components/schemas/ApiReportPolicyViolationDTOV2'
    ApiReportConstraintConditionDTOV2:
      type: object
      properties:
        conditionSummary:
          type: string
        conditionReason:
          type: string
    ApiReportConstraintViolationDTOV2:
      type: object
      properties:
        constraintId:
          type: string
        constraintName:
          type: string
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/ApiReportConstraintConditionDTOV2'
    ApiReportPolicyDataDTOV2:
      type: object
      properties:
        reportTime:
          type: string
          format: date-time
        reportTitle:
          type: string
        commitHash:
          type: string
        initiator:
          type: string
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        counts:
          type: object
          additionalProperties:
            type: integer
            format: int32
        components:
          type: array
          items:
            $ref: '#/components/schemas/ApiReportComponentPolicyViolationsDTOV2'
    ApiReportPolicyViolationDTOV2:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        policyThreatCategory:
          type: string
        policyThreatLevel:
          type: integer
          format: int32
        policyViolationId:
          type: string
        waived:
          type: boolean
        grandfathered:
          type: boolean
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/ApiReportConstraintViolationDTOV2'
    InnerSourceData:
      type: object
      properties:
        ownerApplicationName:
          type: string
        ownerApplicationId:
          type: string
        innerSourceComponentPurl:
          type: string
    ApiLicenseDataDTOV2:
      type: object
      properties:
        declaredLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        observedLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        effectiveLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        overriddenLicenses:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseDTO'
        status:
          type: string
        effectiveLicenseThreats:
          type: array
          items:
            $ref: '#/components/schemas/ApiLicenseThreatDTOV2'
    ApiMatchStateSummaryDTOV2:
      type: object
      properties:
        totalComponentCount:
          type: integer
          format: int32
        knownComponentCount:
          type: integer
          format: int32
    ApiReportComponentDTOV2:
      type: object
      properties:
        packageUrl:
          type: string
        hash:
          type: string
        sha256:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        displayName:
          type: string
        proprietary:
          type: boolean
        thirdParty:
          type: boolean
        matchState:
          type: string
        pathnames:
          type: array
          items:
            type: string
        identificationSource:
          type: string
        licenseData:
          $ref: '#/components/schemas/ApiLicenseDataDTOV2'
        securityData:
          $ref: '#/components/schemas/ApiSecurityDataDTO'
        dependencyData:
          $ref: '#/components/schemas/ApiDependencyDataDTO'
    ApiReportRawDataDTOV2:
      type: object
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/ApiReportComponentDTOV2'
        matchSummary:
          $ref: '#/components/schemas/ApiMatchStateSummaryDTOV2'
    ApiApplicationReportDTOV2:
      type: object
      properties:
        stage:
          type: string
        applicationId:
          type: string
        evaluationDate:
          type: string
          format: date-time
        latestReportHtmlUrl:
          type: string
        reportHtmlUrl:
          type: string
        embeddableReportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        reportDataUrl:
          type: string
    Action:
      type: object
      properties:
        actionTypeId:
          type: string
        target:
          type: string
        targetType:
          type: string
    ApiReportHistoryDTO:
      type: object
      properties:
        applicationId:
          type: string
        reports:
          type: array
          items:
            $ref: '#/components/schemas/ApiReportResultsDTO'
    ApiReportResultsDTO:
      type: object
      properties:
        stage:
          type: string
        applicationId:
          type: string
        evaluationDate:
          type: string
          format: date-time
        latestReportHtmlUrl:
          type: string
        reportHtmlUrl:
          type: string
        embeddableReportHtmlUrl:
          type: string
        reportPdfUrl:
          type: string
        reportDataUrl:
          type: string
        policyEvaluationId:
          type: string
        scanId:
          type: string
        isReevaluation:
          type: boolean
        isForMonitoring:
          type: boolean
        commitHash:
          type: string
        policyEvaluationResult:
          $ref: '#/components/schemas/PolicyEvaluationResult'
    ComponentFact:
      type: object
      properties:
        componentIdentifier:
          $ref: '#/components/schemas/ComponentIdentifier'
        hash:
          type: string
        constraintFacts:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintFact'
        pathnames:
          type: array
          items:
            type: string
        displayName:
          $ref: '#/components/schemas/ComponentDisplayName'
    PolicyAlert:
      type: object
      properties:
        trigger:
          $ref: '#/components/schemas/PolicyFact'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    PolicyEvaluationResult:
      type: object
      properties:
        alerts:
          type: array
          items:
            $ref: '#/components/schemas/PolicyAlert'
        affectedComponentCount:
          type: integer
          format: int32
        criticalComponentCount:
          type: integer
          format: int32
        severeComponentCount:
          type: integer
          format: int32
        moderateComponentCount:
          type: integer
          format: int32
        criticalPolicyViolationCount:
          type: integer
          format: int32
        severePolicyViolationCount:
          type: integer
          format: int32
        moderatePolicyViolationCount:
          type: integer
          format: int32
        grandfatheredPolicyViolationCount:
          type: integer
          format: int32
        totalComponentCount:
          type: integer
          format: int32
    PolicyFact:
      type: object
      properties:
        policyId:
          type: string
        policyName:
          type: string
        threatLevel:
          type: integer
          format: int32
        policyViolationId:
          type: string
        componentFacts:
          type: array
          items:
            $ref: '#/components/schemas/ComponentFact'
    ApiReverseProxyAuthenticationConfigurationDTO:
      type: object
      properties:
        enabled:
          type: boolean
        usernameHeader:
          type: string
        csrfProtectionDisabled:
          type: boolean
        logoutUrl:
          type: string
    ApiMemberDTO:
      type: object
      properties:
        ownerId:
          type: string
        ownerType:
          type: string
        type:
          type: string
          enum:
            - USER
            - GROUP
        userOrGroupName:
          type: string
    ApiRoleMemberMappingDTO:
      type: object
      properties:
        roleId:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/ApiMemberDTO'
    ApiRoleMemberMappingListDTO:
      type: object
      properties:
        memberMappings:
          type: array
          items:
            $ref: '#/components/schemas/ApiRoleMemberMappingDTO'
    ApiRoleDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    ApiRoleListDTO:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/ApiRoleDTO'
    ApiSamlConfigurationResponseDTO:
      type: object
      properties:
        identityProviderName:
          type: string
        entityId:
          type: string
        firstNameAttributeName:
          type: string
        lastNameAttributeName:
          type: string
        emailAttributeName:
          type: string
        usernameAttributeName:
          type: string
        groupsAttributeName:
          type: string
        validateResponseSignature:
          type: boolean
        validateAssertionSignature:
          type: boolean
        identityProviderMetadataXml:
          type: string
    ApiSamlConfigurationDTO:
      type: object
      properties:
        identityProviderName:
          type: string
        entityId:
          type: string
        firstNameAttributeName:
          type: string
        lastNameAttributeName:
          type: string
        emailAttributeName:
          type: string
        usernameAttributeName:
          type: string
        groupsAttributeName:
          type: string
        validateResponseSignature:
          type: boolean
        validateAssertionSignature:
          type: boolean
    ApiSearchCriteriaDTOV2:
      type: object
      properties:
        stageId:
          type: string
        hash:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
    ApiSearchResultDTOV2:
      type: object
      properties:
        applicationId:
          type: string
        applicationName:
          type: string
        reportHtmlUrl:
          type: string
        reportUrl:
          type: string
        hash:
          type: string
        componentIdentifier:
          $ref: '#/components/schemas/ApiComponentIdentifierDTOV2'
        packageUrl:
          type: string
        threatLevel:
          type: integer
          format: int32
        dependencyData:
          $ref: '#/components/schemas/ApiDependencyDataDTO'
    ApiSearchResultsDTOV2:
      type: object
      properties:
        criteria:
          $ref: '#/components/schemas/ApiSearchCriteriaDTOV2'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApiSearchResultDTOV2'
    ApiOwnerDTO:
      type: object
      properties:
        ownerPublicId:
          type: string
        ownerId:
          type: string
        ownerName:
          type: string
        ownerType:
          type: string
    ApiSecurityVulnerabilityOverrideDTOV2:
      type: object
      properties:
        securityOverrideId:
          type: string
        hash:
          type: string
        referenceId:
          type: string
        status:
          type: string
        comment:
          type: string
        owner:
          $ref: '#/components/schemas/ApiOwnerDTO'
        currentlyAffectedComponents:
          type: array
          items:
            $ref: '#/components/schemas/ApiComponentDTOV2'
    ApiSecurityVulnerabilityOverrideResponseDTOV2:
      type: object
      properties:
        securityOverrides:
          type: array
          items:
            $ref: '#/components/schemas/ApiSecurityVulnerabilityOverrideDTOV2'
    ApiSourceControlConfigurationDTO:
      type: object
      properties:
        cloneDirectory:
          type: string
        gitImplementation:
          type: string
          enum:
            - native
            - java
        prCommentPurgeWindow:
          type: integer
          format: int32
        prEventPurgeWindow:
          type: integer
          format: int32
        gitExecutable:
          type: string
        gitTimeoutSeconds:
          type: integer
          format: int32
        commitUsername:
          type: string
        commitEmail:
          type: string
        useUsernameInRepositoryCloneUrl:
          type: boolean
        defaultBranchMonitoringStartTime:
          type: string
        defaultBranchMonitoringIntervalHours:
          type: integer
          format: int32
        pullRequestMonitoringIntervalSeconds:
          type: integer
          format: int32
    ApiPullRequestResult:
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        title:
          type: string
        exceptionThrown:
          type: boolean
        successful:
          type: boolean
        totalTime:
          type: integer
          format: int64
        reasoning:
          type: string
    ApiPullRequestResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ApiPullRequestResult'
    ApiSourceControlDTO:
      type: object
      properties:
        id:
          type: string
        ownerId:
          type: string
        repositoryUrl:
          type: string
        username:
          type: string
        token:
          type: string
        provider:
          type: string
        baseBranch:
          type: string
        enablePullRequests:
          type: boolean
        remediationPullRequestsEnabled:
          type: boolean
        enableStatusChecks:
          type: boolean
        statusChecksEnabled:
          type: boolean
        pullRequestCommentingEnabled:
          type: boolean
        sourceControlEvaluationsEnabled:
          type: boolean
        sourceControlScanTarget:
          type: string
        sshEnabled:
          type: boolean
    ApiConditionFactReasonDTO:
      type: object
      properties:
        reason:
          type: string
    ApiConstraintFactDTO:
      type: object
      properties:
        constraintName:
          type: string
        constraintId:
          type: string
        reasons:
          type: array
          items:
            $ref: '#/components/schemas/ApiConditionFactReasonDTO'
    ApiStaleApplicationEvaluationDTO:
      type: object
      properties:
        application:
          $ref: '#/components/schemas/ApiApplicationBaseDTO'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/ApiStaleEvaluationStageDTO'
    ApiStaleEvaluationStageDTO:
      type: object
      properties:
        stageId:
          type: string
        lastEvaluationDate:
          type: string
          format: date-time
    ApiStaleEvaluationsDTO:
      type: object
      properties:
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApiStaleApplicationEvaluationDTO'
        repositories:
          type: array
          items:
            $ref: '#/components/schemas/ApiStaleRepositoryEvaluationDTO'
    ApiStaleRepositoryEvaluationDTO:
      type: object
      properties:
        repository:
          $ref: '#/components/schemas/ApiRepositoryDTO'
        stages:
          type: array
          items:
            $ref: '#/components/schemas/ApiStaleEvaluationStageDTO'
    ApiStaleWaiverDTO:
      type: object
      properties:
        waiverId:
          type: string
        policyId:
          type: string
        policyName:
          type: string
        comment:
          type: string
        scopeOwnerType:
          type: string
        scopeOwnerId:
          type: string
        scopeOwnerName:
          type: string
        createTime:
          type: string
          format: date-time
        expiryTime:
          type: string
          format: date-time
        creatorId:
          type: string
        creatorName:
          type: string
        constraintFacts:
          type: array
          items:
            $ref: '#/components/schemas/ApiConstraintFactDTO'
        staleEvaluations:
          $ref: '#/components/schemas/ApiStaleEvaluationsDTO'
    ApiStaleWaiversResponseDTO:
      type: object
      properties:
        staleWaivers:
          type: array
          items:
            $ref: '#/components/schemas/ApiStaleWaiverDTO'
    ApiUserDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        realm:
          type: string
    ApiUserListDTO:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/ApiUserDTO'
    ApiUserTokenDTO:
      type: object
      properties:
        userCode:
          type: string
        passCode:
          type: string
        username:
          type: string
        realm:
          type: string
    ApiUserTokenExistsDTO:
      type: object
      properties:
        userTokenExists:
          type: boolean
    CweId:
      type: object
      properties:
        id:
          type: string
        uri:
          type: string
          format: uri
    ReferenceLink:
      type: object
      properties:
        referenceType:
          type: string
        url:
          type: string
    RootCause:
      type: object
      properties:
        listOfPaths:
          type: array
          items:
            type: string
        versionRange:
          type: string
    SecurityVulnerabilityData:
      type: object
      properties:
        identifier:
          type: string
        vulnIds:
          type: array
          items:
            type: string
        vulnerabilityLink:
          type: string
          format: uri
        source:
          $ref: '#/components/schemas/VulnerabilitySource'
        mainSeverity:
          $ref: '#/components/schemas/SecurityVulnerabilitySeverity'
        severityScores:
          type: array
          items:
            $ref: '#/components/schemas/SecurityVulnerabilitySeverity'
        weakness:
          $ref: '#/components/schemas/SecurityVulnerabilityWeakness'
        categories:
          type: array
          items:
            type: string
        description:
          type: string
        explanationMarkdown:
          type: string
        componentExplanationMarkdown:
          type: string
        detectionMarkdown:
          type: string
        componentDetectionMarkdown:
          type: string
        recommendationMarkdown:
          type: string
        componentRecommendationMarkdown:
          type: string
        rootCauses:
          type: array
          items:
            $ref: '#/components/schemas/RootCause'
        advisories:
          type: array
          items:
            $ref: '#/components/schemas/ReferenceLink'
        vulnerableVersionRanges:
          type: array
          items:
            type: string
        researchType:
          type: string
          enum:
            - FAST_TRACK
            - DEEP_DIVE
        isAdvancedVulnerabilityDetection:
          type: boolean
    SecurityVulnerabilitySeverity:
      type: object
      properties:
        source:
          type: string
        score:
          type: number
          format: float
        vector:
          type: string
    SecurityVulnerabilityWeakness:
      type: object
      properties:
        cweSource:
          type: string
        cweIds:
          type: array
          items:
            $ref: '#/components/schemas/CweId'
    VulnerabilitySource:
      type: object
      properties:
        shortName:
          type: string
        longName:
          type: string
    ApiArtifactoryConnectionDTO:
      type: object
      properties:
        artifactoryConnectionId:
          type: string
        ownerType:
          type: string
          enum:
            - application
            - organization
            - repository_container
            - repository
            - global
        ownerId:
          type: string
        isAnonymous:
          type: boolean
        baseUrl:
          type: string
        username:
          type: string
        password:
          type: string
    ApiArtifactoryConnectionStatusResponseDTO:
      type: object
      properties:
        enabled:
          type: boolean
        inheritedFromOrganizationId:
          type: string
        inheritedFromOrganizationName:
          type: string
        allowOverride:
          type: boolean
        inheritedFromOrgEnabled:
          type: boolean
        allowChange:
          type: boolean
    ApiOwnerArtifactoryConnectionDTO:
      type: object
      properties:
        artifactoryConnection:
          $ref: '#/components/schemas/ApiArtifactoryConnectionDTO'
        artifactoryConnectionStatus:
          $ref: '#/components/schemas/ApiArtifactoryConnectionStatusResponseDTO'
        ownerDTO:
          $ref: '#/components/schemas/ApiOwnerDTO'
    ApiArtifactoryConnectionStatusRequestDTO:
      type: object
      properties:
        enabled:
          type: boolean
        allowOverride:
          type: boolean
security:
  - BasicAuth: []